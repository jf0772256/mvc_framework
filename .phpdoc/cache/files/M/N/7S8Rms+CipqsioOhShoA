1714556047
waR3U4bTeM%3A2fff00ca74a65541cf37764032f7f2b3-3ab03a392c465f417ac5ae5a9dac6e81
s:17636:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjNhYjAzYTM5MmM0NjVmNDE3YWM1YWU1YTlkYWM2ZTgxIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6Mzk6ImFwcC1jb3JlLW1pZGRsZXdhcmUtQmFzZU1pZGRsZXdhcmUuaHRtbCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjU5OiJwdWJsaWMvZG9jcy9jbGFzc2VzL2FwcC1jb3JlLW1pZGRsZXdhcmUtQmFzZU1pZGRsZXdhcmUuaHRtbCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTIyNTg6IjwhRE9DVFlQRSBodG1sPgo8aHRtbCBsYW5nPSJlbiI+CjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgICAgICA8dGl0bGU+TXkgTVZDIEZyYW1ld29yazwvdGl0bGU+CiAgICAKICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgIDxiYXNlIGhyZWY9Ii4uLyI+CiAgICA8bGluayByZWw9Imljb24iIGhyZWY9ImltYWdlcy9mYXZpY29uLmljbyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3Mvbm9ybWFsaXplLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9iYXNlLmNzcyI+CiAgICAgICAgICAgIDxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSI+CiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Tb3VyY2UrU2FucytQcm86d2dodEA0MDA7NjAwOzcwMCZkaXNwbGF5PXN3YXAiIHJlbD0ic3R5bGVzaGVldCI+CiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Tb3VyY2UrQ29kZStQcm86d2dodEA0MDA7NjAwOzcwMCZkaXNwbGF5PXN3YXAiIHJlbD0ic3R5bGVzaGVldCI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3MvdGVtcGxhdGUuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2ZvbnQtYXdlc29tZS81LjEyLjAvY3NzL2FsbC5taW4uY3NzIiBpbnRlZ3JpdHk9InNoYTI1Ni15YlJrTjlkQmpoY1MycXJXMXoraGZDeHErMWFCZHd5UU01d2xRb1FWdC8wPSIgY3Jvc3NvcmlnaW49ImFub255bW91cyIgLz4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vcHJpc21qc0AxLjIzLjAvdGhlbWVzL3ByaXNtLW9rYWlkaWEuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vcHJpc21qc0AxLjIzLjAvcGx1Z2lucy9saW5lLW51bWJlcnMvcHJpc20tbGluZS1udW1iZXJzLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3ByaXNtanNAMS4yMy4wL3BsdWdpbnMvbGluZS1oaWdobGlnaHQvcHJpc20tbGluZS1oaWdobGlnaHQuY3NzIj4KICAgICAgICAgICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Z1c2UuanNAMy40LjYiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Nzcy12YXJzLXBvbnlmaWxsQDIiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJqcy9zZWFyY2guanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgZGVmZXIgc3JjPSJqcy9zZWFyY2hJbmRleC5qcyI+PC9zY3JpcHQ+CiAgICA8L2hlYWQ+Cjxib2R5IGlkPSJ0b3AiPgogICAgPGhlYWRlciBjbGFzcz0icGhwZG9jdW1lbnRvci1oZWFkZXIgcGhwZG9jdW1lbnRvci1zZWN0aW9uIj4KICAgIDxoMSBjbGFzcz0icGhwZG9jdW1lbnRvci10aXRsZSI+PGEgaHJlZj0iIiBjbGFzcz0icGhwZG9jdW1lbnRvci10aXRsZV9fbGluayI+TXkgTVZDIEZyYW1ld29yazwvYT48L2gxPgogICAgPGlucHV0IGNsYXNzPSJwaHBkb2N1bWVudG9yLWhlYWRlcl9fbWVudS1idXR0b24iIHR5cGU9ImNoZWNrYm94IiBpZD0ibWVudS1idXR0b24iIG5hbWU9Im1lbnUtYnV0dG9uIiAvPgogICAgPGxhYmVsIGNsYXNzPSJwaHBkb2N1bWVudG9yLWhlYWRlcl9fbWVudS1pY29uIiBmb3I9Im1lbnUtYnV0dG9uIj4KICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWJhcnMiPjwvaT4KICAgIDwvbGFiZWw+CiAgICA8c2VjdGlvbiBkYXRhLXNlYXJjaC1mb3JtIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNlYXJjaCI+CiAgICA8bGFiZWw+CiAgICAgICAgPHNwYW4gY2xhc3M9InZpc3VhbGx5LWhpZGRlbiI+U2VhcmNoIGZvcjwvc3Bhbj4KICAgICAgICA8c3ZnIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNlYXJjaF9faWNvbiIgd2lkdGg9IjIxIiBoZWlnaHQ9IjIwIiB2aWV3Qm94PSIwIDAgMjEgMjAiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgIDxjaXJjbGUgY3g9IjcuNSIgY3k9IjcuNSIgcj0iNi41IiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIi8+CiAgICAgICAgICAgIDxsaW5lIHgxPSIxMi40ODkyIiB5MT0iMTIuMjcyNyIgeDI9IjE5LjE1NTkiIHkyPSIxOC45MzkzIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIzIi8+CiAgICAgICAgPC9zdmc+CiAgICAgICAgPGlucHV0IHR5cGU9InNlYXJjaCIgY2xhc3M9InBocGRvY3VtZW50b3ItZmllbGQgcGhwZG9jdW1lbnRvci1zZWFyY2hfX2ZpZWxkIiBwbGFjZWhvbGRlcj0iTG9hZGluZyAuLiIgZGlzYWJsZWQgLz4KICAgIDwvbGFiZWw+Cjwvc2VjdGlvbj4KCiAgICA8bmF2IGNsYXNzPSJwaHBkb2N1bWVudG9yLXRvcG5hdiI+CiAgICA8dWwgY2xhc3M9InBocGRvY3VtZW50b3ItdG9wbmF2X19tZW51Ij4KICAgICAgICA8L3VsPgo8L25hdj4KPC9oZWFkZXI+CgogICAgPG1haW4gY2xhc3M9InBocGRvY3VtZW50b3IiPgogICAgICAgIDxkaXYgY2xhc3M9InBocGRvY3VtZW50b3Itc2VjdGlvbiI+CiAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0icGhwZG9jdW1lbnRvci1zaWRlYmFyX19tZW51LWJ1dHRvbiIgdHlwZT0iY2hlY2tib3giIGlkPSJzaWRlYmFyLWJ1dHRvbiIgbmFtZT0ic2lkZWJhci1idXR0b24iIC8+CjxsYWJlbCBjbGFzcz0icGhwZG9jdW1lbnRvci1zaWRlYmFyX19tZW51LWljb24iIGZvcj0ic2lkZWJhci1idXR0b24iPgogICAgTWVudQo8L2xhYmVsPgo8YXNpZGUgY2xhc3M9InBocGRvY3VtZW50b3ItY29sdW1uIC1mb3VyIHBocGRvY3VtZW50b3Itc2lkZWJhciI+CiAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9InBocGRvY3VtZW50b3Itc2lkZWJhcl9fY2F0ZWdvcnkiPgogICAgICAgICAgICA8aDIgY2xhc3M9InBocGRvY3VtZW50b3Itc2lkZWJhcl9fY2F0ZWdvcnktaGVhZGVyIj5OYW1lc3BhY2VzPC9oMj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJwaHBkb2N1bWVudG9yLXNpZGViYXJfX3Jvb3QtbmFtZXNwYWNlIj4KICAgIDxhIGhyZWY9Im5hbWVzcGFjZXMvYXBwLmh0bWwiIGNsYXNzPSIiPmFwcDwvYT4KPC9oND4KICAgIDx1bCBjbGFzcz0icGhwZG9jdW1lbnRvci1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSJuYW1lc3BhY2VzL2FwcC1jb250cm9sbGVycy5odG1sIiBjbGFzcz0iIj5jb250cm9sbGVyczwvYT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Im5hbWVzcGFjZXMvYXBwLWNvcmUuaHRtbCIgY2xhc3M9IiI+Y29yZTwvYT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Im5hbWVzcGFjZXMvYXBwLW1vZGVscy5odG1sIiBjbGFzcz0iIj5tb2RlbHM8L2E+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPC91bD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VjdGlvbj4KICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNpZGViYXJfX2NhdGVnb3J5Ij4KICAgICAgICAgICAgPGgyIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNpZGViYXJfX2NhdGVnb3J5LWhlYWRlciI+UGFja2FnZXM8L2gyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9InBocGRvY3VtZW50b3Itc2lkZWJhcl9fcm9vdC1uYW1lc3BhY2UiPgogICAgPGEgaHJlZj0icGFja2FnZXMvTXlNVkNGcmFtZXdvcmsuaHRtbCIgY2xhc3M9IiI+TXlNVkNGcmFtZXdvcms8L2E+CjwvaDQ+CgogICAgICAgICAgICAgICAgICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgICAgIAogICAgPHNlY3Rpb24gY2xhc3M9InBocGRvY3VtZW50b3Itc2lkZWJhcl9fY2F0ZWdvcnkiPgogICAgICAgIDxoMiBjbGFzcz0icGhwZG9jdW1lbnRvci1zaWRlYmFyX19jYXRlZ29yeS1oZWFkZXIiPlJlcG9ydHM8L2gyPgogICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNpZGViYXJfX3Jvb3QtcGFja2FnZSI+PGEgaHJlZj0icmVwb3J0cy9kZXByZWNhdGVkLmh0bWwiPkRlcHJlY2F0ZWQ8L2E+PC9oMz4KICAgICAgICA8aDMgY2xhc3M9InBocGRvY3VtZW50b3Itc2lkZWJhcl9fcm9vdC1wYWNrYWdlIj48YSBocmVmPSJyZXBvcnRzL2Vycm9ycy5odG1sIj5FcnJvcnM8L2E+PC9oMz4KICAgICAgICA8aDMgY2xhc3M9InBocGRvY3VtZW50b3Itc2lkZWJhcl9fcm9vdC1wYWNrYWdlIj48YSBocmVmPSJyZXBvcnRzL21hcmtlcnMuaHRtbCI+TWFya2VyczwvYT48L2gzPgogICAgPC9zZWN0aW9uPgoKICAgIDxzZWN0aW9uIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNpZGViYXJfX2NhdGVnb3J5Ij4KICAgICAgICA8aDIgY2xhc3M9InBocGRvY3VtZW50b3Itc2lkZWJhcl9fY2F0ZWdvcnktaGVhZGVyIj5JbmRpY2VzPC9oMj4KICAgICAgICA8aDMgY2xhc3M9InBocGRvY3VtZW50b3Itc2lkZWJhcl9fcm9vdC1wYWNrYWdlIj48YSBocmVmPSJpbmRpY2VzL2ZpbGVzLmh0bWwiPkZpbGVzPC9hPjwvaDM+CiAgICA8L3NlY3Rpb24+CjwvYXNpZGU+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwaHBkb2N1bWVudG9yLWNvbHVtbiAtZWlnaHQgcGhwZG9jdW1lbnRvci1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InBocGRvY3VtZW50b3ItYnJlYWRjcnVtYnMiPgogICAgICAgICAgICA8bGkgY2xhc3M9InBocGRvY3VtZW50b3ItYnJlYWRjcnVtYiI+PGEgaHJlZj0ibmFtZXNwYWNlcy9hcHAuaHRtbCI+YXBwPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0icGhwZG9jdW1lbnRvci1icmVhZGNydW1iIj48YSBocmVmPSJuYW1lc3BhY2VzL2FwcC1jb3JlLmh0bWwiPmNvcmU8L2E+PC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJwaHBkb2N1bWVudG9yLWJyZWFkY3J1bWIiPjxhIGhyZWY9Im5hbWVzcGFjZXMvYXBwLWNvcmUtbWlkZGxld2FyZS5odG1sIj5taWRkbGV3YXJlPC9hPjwvbGk+CiAgICA8L3VsPgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwaHBkb2N1bWVudG9yLWVsZW1lbnQgLWNsYXNzIj4KICAgICAgICA8aDIgY2xhc3M9InBocGRvY3VtZW50b3ItY29udGVudF9fdGl0bGUiPgogICAgQmFzZU1pZGRsZXdhcmUKCiAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icGhwZG9jdW1lbnRvci1lbGVtZW50X19wYWNrYWdlIj4KICAgICAgICAgICAgaW4gcGFja2FnZQogICAgICAgICAgICA8dWwgY2xhc3M9InBocGRvY3VtZW50b3ItYnJlYWRjcnVtYnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InBocGRvY3VtZW50b3ItYnJlYWRjcnVtYiI+PGEgaHJlZj0icGFja2FnZXMvTXlNVkNGcmFtZXdvcmsuaHRtbCI+TXlNVkNGcmFtZXdvcms8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAKICAgIAogICAgPC9oMj4KCiAgICAgICAgPGFzaWRlIGNsYXNzPSJwaHBkb2N1bWVudG9yLWVsZW1lbnQtZm91bmQtaW4iPgogICAgPGFiYnIgY2xhc3M9InBocGRvY3VtZW50b3ItZWxlbWVudC1mb3VuZC1pbl9fZmlsZSIgdGl0bGU9ImNvcmUvbWlkZGxld2FyZS9CYXNlTWlkZGxld2FyZS5waHAiPjxhIGhyZWY9ImZpbGVzL2NvcmUtbWlkZGxld2FyZS1iYXNlbWlkZGxld2FyZS5odG1sIj48YWJiciB0aXRsZT0iY29yZS9taWRkbGV3YXJlL0Jhc2VNaWRkbGV3YXJlLnBocCI+QmFzZU1pZGRsZXdhcmUucGhwPC9hYmJyPjwvYT48L2FiYnI+CiAgICA6CiAgICA8c3BhbiBjbGFzcz0icGhwZG9jdW1lbnRvci1lbGVtZW50LWZvdW5kLWluX19saW5lIj41PC9zcGFuPgoKICAgIDwvYXNpZGU+CgogICAgICAgIAogICAgPHNlY3Rpb24gY2xhc3M9InBocGRvY3VtZW50b3ItZGVzY3JpcHRpb24iPjwvc2VjdGlvbj4KCgoKCgoKCgo8aDMgaWQ9InRvYyI+CiAgICBUYWJsZSBvZiBDb250ZW50cwogICAgPGEgaHJlZj0iI3RvYyIgY2xhc3M9ImhlYWRlcmxpbmsiPjxpIGNsYXNzPSJmYXMgZmEtbGluayI+PC9pPjwvYT4KPC9oMz4KCjxkbCBjbGFzcz0icGhwZG9jdW1lbnRvci10YWJsZS1vZi1jb250ZW50cyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkdCBjbGFzcz0icGhwZG9jdW1lbnRvci10YWJsZS1vZi1jb250ZW50c19fZW50cnkgLW1ldGhvZCAtcHVibGljIj4KICAgIDxhIGhyZWY9ImNsYXNzZXMvYXBwLWNvcmUtbWlkZGxld2FyZS1CYXNlTWlkZGxld2FyZS5odG1sI21ldGhvZF9leGVjdXRlIj5leGVjdXRlKCk8L2E+CiAgICA8c3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmbmJzcDs6IG1peGVkICAgIDwvc3Bhbj4KPC9kdD4KPGRkPjwvZGQ+CgogICAgICAgIDwvZGw+CgoKCiAgICAgICAgCgogICAgICAgIAoKICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9InBocGRvY3VtZW50b3ItbWV0aG9kcyI+CiAgICAgICAgPGgzIGNsYXNzPSJwaHBkb2N1bWVudG9yLWVsZW1lbnRzX19oZWFkZXIiIGlkPSJtZXRob2RzIj4KICAgICAgICAgICAgTWV0aG9kcwogICAgICAgICAgICA8YSBocmVmPSJjbGFzc2VzL2FwcC1jb3JlLW1pZGRsZXdhcmUtQmFzZU1pZGRsZXdhcmUuaHRtbCNtZXRob2RzIiBjbGFzcz0iaGVhZGVybGluayI+PGkgY2xhc3M9ImZhcyBmYS1saW5rIj48L2k+PC9hPgogICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgICAgICAgPGFydGljbGUKICAgICAgICBjbGFzcz0icGhwZG9jdW1lbnRvci1lbGVtZW50CiAgICAgICAgICAgIC1tZXRob2QKICAgICAgICAgICAgLXB1YmxpYwogICAgICAgICAgICAgICAgICAgICAgICAtYWJzdHJhY3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIKPgogICAgPGg0IGNsYXNzPSJwaHBkb2N1bWVudG9yLWVsZW1lbnRfX25hbWUiIGlkPSJtZXRob2RfZXhlY3V0ZSI+CiAgICAgICAgZXhlY3V0ZSgpCiAgICAgICAgPGEgaHJlZj0iY2xhc3Nlcy9hcHAtY29yZS1taWRkbGV3YXJlLUJhc2VNaWRkbGV3YXJlLmh0bWwjbWV0aG9kX2V4ZWN1dGUiIGNsYXNzPSJoZWFkZXJsaW5rIj48aSBjbGFzcz0iZmFzIGZhLWxpbmsiPjwvaT48L2E+CiAgICA8L2g0PgogICAgPGFzaWRlIGNsYXNzPSJwaHBkb2N1bWVudG9yLWVsZW1lbnQtZm91bmQtaW4iPgogICAgPGFiYnIgY2xhc3M9InBocGRvY3VtZW50b3ItZWxlbWVudC1mb3VuZC1pbl9fZmlsZSIgdGl0bGU9ImNvcmUvbWlkZGxld2FyZS9CYXNlTWlkZGxld2FyZS5waHAiPjxhIGhyZWY9ImZpbGVzL2NvcmUtbWlkZGxld2FyZS1iYXNlbWlkZGxld2FyZS5odG1sIj48YWJiciB0aXRsZT0iY29yZS9taWRkbGV3YXJlL0Jhc2VNaWRkbGV3YXJlLnBocCI+QmFzZU1pZGRsZXdhcmUucGhwPC9hYmJyPjwvYT48L2FiYnI+CiAgICA6CiAgICA8c3BhbiBjbGFzcz0icGhwZG9jdW1lbnRvci1lbGVtZW50LWZvdW5kLWluX19saW5lIj42PC9zcGFuPgoKICAgIDwvYXNpZGU+CgogICAgCiAgICA8Y29kZSBjbGFzcz0icGhwZG9jdW1lbnRvci1jb2RlIHBocGRvY3VtZW50b3Itc2lnbmF0dXJlICI+CiAgICA8c3BhbiBjbGFzcz0icGhwZG9jdW1lbnRvci1zaWduYXR1cmVfX3Zpc2liaWxpdHkiPnB1YmxpYzwvc3Bhbj4KICAgIDxzcGFuIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNpZ25hdHVyZV9fYWJzdHJhY3QiPmFic3RyYWN0PC9zcGFuPiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGhwZG9jdW1lbnRvci1zaWduYXR1cmVfX25hbWUiPmV4ZWN1dGU8L3NwYW4+PHNwYW4+KDwvc3Bhbj48c3Bhbj4pPC9zcGFuPjxzcGFuPiA6IDwvc3Bhbj48c3BhbiBjbGFzcz0icGhwZG9jdW1lbnRvci1zaWduYXR1cmVfX3Jlc3BvbnNlX3R5cGUiPm1peGVkPC9zcGFuPjwvY29kZT4KCiAgICAgICAgPHNlY3Rpb24gY2xhc3M9InBocGRvY3VtZW50b3ItZGVzY3JpcHRpb24iPjwvc2VjdGlvbj4KCiAgICAKICAgIAoKICAgICAgICA8aDUgY2xhc3M9InBocGRvY3VtZW50b3ItcmV0dXJuLXZhbHVlX19oZWFkaW5nIj5SZXR1cm4gdmFsdWVzPC9oNT4KICAgIDxzcGFuIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNpZ25hdHVyZV9fcmVzcG9uc2VfdHlwZSI+bWl4ZWQ8L3NwYW4+CiAgICAgICAgICAgICZtZGFzaDsKICAgICAgICAKICAgIAo8L2FydGljbGU+CiAgICAgICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgZnVuY3Rpb24gbG9hZEV4dGVybmFsQ29kZVNuaXBwZXRzKGxpbmUpIHsKICAgICAgICAgICAgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlW2RhdGEtc3JjXScpKS5mb3JFYWNoKChwcmUpID0+IHsKICAgICAgICAgICAgICAgIHZhciBzcmMgPSBwcmUuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpLnJlcGxhY2UoIC9cXC9nLCAnLycpOwogICAgICAgICAgICAgICAgdmFyIGV4dGVuc2lvbiA9IChzcmMubWF0Y2goL1wuKFx3KykkLykgfHwgWywgJyddKVsxXTsKICAgICAgICAgICAgICAgIHZhciBsYW5ndWFnZSA9ICdwaHAnOwoKICAgICAgICAgICAgICAgIHZhciBjb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY29kZScpOwogICAgICAgICAgICAgICAgY29kZS5jbGFzc05hbWUgPSAnbGFuZ3VhZ2UtJyArIGxhbmd1YWdlOwoKICAgICAgICAgICAgICAgIHByZS50ZXh0Q29udGVudCA9ICcnOwoKICAgICAgICAgICAgICAgIHByZS5zZXRBdHRyaWJ1dGUoJ2RhdGEtbGluZScsIGxpbmUpCiAgICAgICAgICAgICAgICBjb2RlLnRleHRDb250ZW50ID0gJ0xvYWRpbmfigKYnOwoKICAgICAgICAgICAgICAgIHByZS5hcHBlbmRDaGlsZChjb2RlKTsKCiAgICAgICAgICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CgogICAgICAgICAgICAgICAgeGhyLm9wZW4oJ0dFVCcsIHNyYywgdHJ1ZSk7CgogICAgICAgICAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT0gNCkgewoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHhoci5zdGF0dXMgPCA0MDAgJiYgeGhyLnJlc3BvbnNlVGV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZS50ZXh0Q29udGVudCA9IHhoci5yZXNwb25zZVRleHQ7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgUHJpc20uaGlnaGxpZ2h0RWxlbWVudChjb2RlKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh4aHIuc3RhdHVzID49IDQwMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZS50ZXh0Q29udGVudCA9ICfinJYgRXJyb3IgJyArIHhoci5zdGF0dXMgKyAnIHdoaWxlIGZldGNoaW5nIGZpbGU6ICcgKyB4aHIuc3RhdHVzVGV4dDsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUudGV4dENvbnRlbnQgPSAn4pyWIEVycm9yOiBGaWxlIGRvZXMgbm90IGV4aXN0LCBpcyBlbXB0eSBvciB0cnlpbmcgdG8gdmlldyBmcm9tIGxvY2FsaG9zdCc7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIHhoci5zZW5kKG51bGwpOwogICAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHZhciBtb2RhbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJbZGF0YS1tb2RhbF0iKTsKCiAgICAgICAgbW9kYWxzLmZvckVhY2goZnVuY3Rpb24gKHRyaWdnZXIpIHsKICAgICAgICAgICAgdHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICAgICAgLy9ldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0cmlnZ2VyLmRhdGFzZXQubW9kYWwpOwogICAgICAgICAgICAgICAgbW9kYWwuY2xhc3NMaXN0LmFkZCgicGhwZG9jdW1lbnRvci1tb2RhbF9fb3BlbiIpOwogICAgICAgICAgICAgICAgbG9hZEV4dGVybmFsQ29kZVNuaXBwZXRzKHRyaWdnZXIuZGF0YXNldC5saW5lKQogICAgICAgICAgICAgICAgY29uc3QgZXhpdHMgPSBtb2RhbC5xdWVyeVNlbGVjdG9yQWxsKCJbZGF0YS1leGl0LWJ1dHRvbl0iKTsKICAgICAgICAgICAgICAgIGV4aXRzLmZvckVhY2goZnVuY3Rpb24gKGV4aXQpIHsKICAgICAgICAgICAgICAgICAgICBleGl0LmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoInBocGRvY3VtZW50b3ItbW9kYWxfX29wZW4iKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIDwvc2NyaXB0PgoKICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgIDxzZWN0aW9uIGRhdGEtc2VhcmNoLXJlc3VsdHMgY2xhc3M9InBocGRvY3VtZW50b3Itc2VhcmNoLXJlc3VsdHMgcGhwZG9jdW1lbnRvci1zZWFyY2gtcmVzdWx0cy0taGlkZGVuIj4KICAgIDxzZWN0aW9uIGNsYXNzPSJwaHBkb2N1bWVudG9yLXNlYXJjaC1yZXN1bHRzX19kaWFsb2ciPgogICAgICAgIDxoZWFkZXIgY2xhc3M9InBocGRvY3VtZW50b3Itc2VhcmNoLXJlc3VsdHNfX2hlYWRlciI+CiAgICAgICAgICAgIDxoMiBjbGFzcz0icGhwZG9jdW1lbnRvci1zZWFyY2gtcmVzdWx0c19fdGl0bGUiPlNlYXJjaCByZXN1bHRzPC9oMj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0icGhwZG9jdW1lbnRvci1zZWFyY2gtcmVzdWx0c19fY2xvc2UiPjxpIGNsYXNzPSJmYXMgZmEtdGltZXMiPjwvaT48L2J1dHRvbj4KICAgICAgICA8L2hlYWRlcj4KICAgICAgICA8c2VjdGlvbiBjbGFzcz0icGhwZG9jdW1lbnRvci1zZWFyY2gtcmVzdWx0c19fYm9keSI+CiAgICAgICAgICAgIDx1bCBjbGFzcz0icGhwZG9jdW1lbnRvci1zZWFyY2gtcmVzdWx0c19fZW50cmllcyI+PC91bD4KICAgICAgICA8L3NlY3Rpb24+CiAgICA8L3NlY3Rpb24+Cjwvc2VjdGlvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGEgaHJlZj0iY2xhc3Nlcy9hcHAtY29yZS1taWRkbGV3YXJlLUJhc2VNaWRkbGV3YXJlLmh0bWwjdG9wIiBjbGFzcz0icGhwZG9jdW1lbnRvci1iYWNrLXRvLXRvcCI+PGkgY2xhc3M9ImZhcyBmYS1jaGV2cm9uLWNpcmNsZS11cCI+PC9pPjwvYT4KCiAgICA8L21haW4+CgogICAgPHNjcmlwdD4KICAgICAgICBjc3NWYXJzKHt9KTsKICAgIDwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vcHJpc21qc0AxLjIzLjAvcHJpc20ubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3ByaXNtanNAMS4yMy4wL3BsdWdpbnMvYXV0b2xvYWRlci9wcmlzbS1hdXRvbG9hZGVyLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9wcmlzbWpzQDEuMjMuMC9wbHVnaW5zL2xpbmUtbnVtYmVycy9wcmlzbS1saW5lLW51bWJlcnMubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3ByaXNtanNAMS4yMy4wL3BsdWdpbnMvbGluZS1oaWdobGlnaHQvcHJpc20tbGluZS1oaWdobGlnaHQubWluLmpzIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";