1714556047
waR3U4bTeM%3A5042e5df5e6243750edb3227090fe2d8-033fdcc1d10b0bebe568abffeb832df6
s:63104:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"033fdcc1d10b0bebe568abffeb832df6";s:39:" phpDocumentor\Reflection\Php\File name";s:25:"app-core-Application.html";s:39:" phpDocumentor\Reflection\Php\File path";s:45:"public/docs/classes/app-core-Application.html";s:41:" phpDocumentor\Reflection\Php\File source";s:46389:"<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
            <title>My MVC Framework</title>
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <base href="../">
    <link rel="icon" href="images/favicon.ico"/>
    <link rel="stylesheet" href="css/normalize.css">
    <link rel="stylesheet" href="css/base.css">
            <link rel="preconnect" href="https://fonts.gstatic.com">
        <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600;700&display=swap" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;600;700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="css/template.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.0/css/all.min.css" integrity="sha256-ybRkN9dBjhcS2qrW1z+hfCxq+1aBdwyQM5wlQoQVt/0=" crossorigin="anonymous" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/prismjs@1.23.0/themes/prism-okaidia.css">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/prismjs@1.23.0/plugins/line-numbers/prism-line-numbers.css">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/prismjs@1.23.0/plugins/line-highlight/prism-line-highlight.css">
                <script src="https://cdn.jsdelivr.net/npm/fuse.js@3.4.6"></script>
        <script src="https://cdn.jsdelivr.net/npm/css-vars-ponyfill@2"></script>
        <script src="js/search.js"></script>
        <script defer src="js/searchIndex.js"></script>
    </head>
<body id="top">
    <header class="phpdocumentor-header phpdocumentor-section">
    <h1 class="phpdocumentor-title"><a href="" class="phpdocumentor-title__link">My MVC Framework</a></h1>
    <input class="phpdocumentor-header__menu-button" type="checkbox" id="menu-button" name="menu-button" />
    <label class="phpdocumentor-header__menu-icon" for="menu-button">
        <i class="fas fa-bars"></i>
    </label>
    <section data-search-form class="phpdocumentor-search">
    <label>
        <span class="visually-hidden">Search for</span>
        <svg class="phpdocumentor-search__icon" width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="7.5" cy="7.5" r="6.5" stroke="currentColor" stroke-width="2"/>
            <line x1="12.4892" y1="12.2727" x2="19.1559" y2="18.9393" stroke="currentColor" stroke-width="3"/>
        </svg>
        <input type="search" class="phpdocumentor-field phpdocumentor-search__field" placeholder="Loading .." disabled />
    </label>
</section>

    <nav class="phpdocumentor-topnav">
    <ul class="phpdocumentor-topnav__menu">
        </ul>
</nav>
</header>

    <main class="phpdocumentor">
        <div class="phpdocumentor-section">
            <input class="phpdocumentor-sidebar__menu-button" type="checkbox" id="sidebar-button" name="sidebar-button" />
<label class="phpdocumentor-sidebar__menu-icon" for="sidebar-button">
    Menu
</label>
<aside class="phpdocumentor-column -four phpdocumentor-sidebar">
                    <section class="phpdocumentor-sidebar__category">
            <h2 class="phpdocumentor-sidebar__category-header">Namespaces</h2>
                                    <h4 class="phpdocumentor-sidebar__root-namespace">
    <a href="namespaces/app.html" class="">app</a>
</h4>
    <ul class="phpdocumentor-list">
                    <li>
                <a href="namespaces/app-controllers.html" class="">controllers</a>
                
            </li>
                    <li>
                <a href="namespaces/app-core.html" class="">core</a>
                
            </li>
                    <li>
                <a href="namespaces/app-models.html" class="">models</a>
                
            </li>
            </ul>

                        </section>
                <section class="phpdocumentor-sidebar__category">
            <h2 class="phpdocumentor-sidebar__category-header">Packages</h2>
                                    <h4 class="phpdocumentor-sidebar__root-namespace">
    <a href="packages/MyMVCFramework.html" class="">MyMVCFramework</a>
</h4>

                        </section>
            
    <section class="phpdocumentor-sidebar__category">
        <h2 class="phpdocumentor-sidebar__category-header">Reports</h2>
                <h3 class="phpdocumentor-sidebar__root-package"><a href="reports/deprecated.html">Deprecated</a></h3>
        <h3 class="phpdocumentor-sidebar__root-package"><a href="reports/errors.html">Errors</a></h3>
        <h3 class="phpdocumentor-sidebar__root-package"><a href="reports/markers.html">Markers</a></h3>
    </section>

    <section class="phpdocumentor-sidebar__category">
        <h2 class="phpdocumentor-sidebar__category-header">Indices</h2>
        <h3 class="phpdocumentor-sidebar__root-package"><a href="indices/files.html">Files</a></h3>
    </section>
</aside>

            <div class="phpdocumentor-column -eight phpdocumentor-content">
                    <ul class="phpdocumentor-breadcrumbs">
            <li class="phpdocumentor-breadcrumb"><a href="namespaces/app.html">app</a></li>
            <li class="phpdocumentor-breadcrumb"><a href="namespaces/app-core.html">core</a></li>
    </ul>

    <article class="phpdocumentor-element -class">
        <h2 class="phpdocumentor-content__title">
    Application

    
            <div class="phpdocumentor-element__package">
            in package
            <ul class="phpdocumentor-breadcrumbs">
                                    <li class="phpdocumentor-breadcrumb"><a href="packages/MyMVCFramework.html">MyMVCFramework</a></li>
                            </ul>
        </div>
    
    
    </h2>

        <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">9</span>

    </aside>

        
    <section class="phpdocumentor-description"></section>








<h3 id="toc">
    Table of Contents
    <a href="#toc" class="headerlink"><i class="fas fa-link"></i></a>
</h3>

<dl class="phpdocumentor-table-of-contents">
                    <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_app">$app</a>
    <span>
                        &nbsp;: <a href="classes/app-core-Application.html"><abbr title="\app\core\Application">Application</abbr></a>            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_controller">$controller</a>
    <span>
                        &nbsp;: <a href="classes/app-core-Controller.html"><abbr title="\app\core\Controller">Controller</abbr></a>            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_dbc">$dbc</a>
    <span>
                        &nbsp;: <a href="classes/app-core-database-Connection.html"><abbr title="\app\core\database\Connection">Connection</abbr></a>            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_layout">$layout</a>
    <span>
                        &nbsp;: string            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_request">$request</a>
    <span>
                        &nbsp;: <a href="classes/app-core-Request.html"><abbr title="\app\core\Request">Request</abbr></a>            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_response">$response</a>
    <span>
                        &nbsp;: <a href="classes/app-core-Response.html"><abbr title="\app\core\Response">Response</abbr></a>            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_ROOT_DIR">$ROOT_DIR</a>
    <span>
                        &nbsp;: string            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_router">$router</a>
    <span>
                        &nbsp;: <a href="classes/app-core-Router.html"><abbr title="\app\core\Router">Router</abbr></a>            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_session">$session</a>
    <span>
                        &nbsp;: <a href="classes/app-core-Session.html"><abbr title="\app\core\Session">Session</abbr></a>            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_user">$user</a>
    <span>
                        &nbsp;: <a href="classes/app-core-UserModel.html"><abbr title="\app\core\UserModel">UserModel</abbr></a>|null            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_userClass">$userClass</a>
    <span>
                        &nbsp;: string            </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -property -public">
    <a href="classes/app-core-Application.html#property_view">$view</a>
    <span>
                        &nbsp;: <a href="classes/app-core-View.html"><abbr title="\app\core\View">View</abbr></a>            </span>
</dt>
<dd></dd>

                <dt class="phpdocumentor-table-of-contents__entry -method -public">
    <a href="classes/app-core-Application.html#method___construct">__construct()</a>
    <span>
                                &nbsp;: mixed    </span>
</dt>
<dd>Constructor Function</dd>

            <dt class="phpdocumentor-table-of-contents__entry -method -public">
    <a href="classes/app-core-Application.html#method_getDatabase">getDatabase()</a>
    <span>
                                &nbsp;: mixed    </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -method -public">
    <a href="classes/app-core-Application.html#method_isGuest">isGuest()</a>
    <span>
                                &nbsp;: bool    </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -method -public">
    <a href="classes/app-core-Application.html#method_login">login()</a>
    <span>
                                &nbsp;: bool    </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -method -public">
    <a href="classes/app-core-Application.html#method_logout">logout()</a>
    <span>
                                &nbsp;: mixed    </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -method -public">
    <a href="classes/app-core-Application.html#method_run">run()</a>
    <span>
                                &nbsp;: mixed    </span>
</dt>
<dd></dd>

            <dt class="phpdocumentor-table-of-contents__entry -method -private">
    <a href="classes/app-core-Application.html#method_CreateDatabaseConnection">CreateDatabaseConnection()</a>
    <span>
                                &nbsp;: void    </span>
</dt>
<dd>function to do the logic to create the database connection</dd>

        </dl>



        

        
    <section class="phpdocumentor-properties">
        <h3 class="phpdocumentor-elements__header" id="properties">
            Properties
            <a href="classes/app-core-Application.html#properties" class="headerlink"><i class="fas fa-link"></i></a>
        </h3>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
            -static                                            "
>
    <h4 class="phpdocumentor-element__name" id="property_app">
        $app
        <a href="classes/app-core-Application.html#property_app" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">21</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
    <span class="phpdocumentor-signature__static">static</span>    <span class="phpdocumentor-signature__type"><a href="classes/app-core-Application.html"><abbr title="\app\core\Application">Application</abbr></a></span>
    <span class="phpdocumentor-signature__name">$app</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_controller">
        $controller
        <a href="classes/app-core-Application.html#property_controller" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">15</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type"><a href="classes/app-core-Controller.html"><abbr title="\app\core\Controller">Controller</abbr></a></span>
    <span class="phpdocumentor-signature__name">$controller</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_dbc">
        $dbc
        <a href="classes/app-core-Application.html#property_dbc" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">12</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type"><a href="classes/app-core-database-Connection.html"><abbr title="\app\core\database\Connection">Connection</abbr></a></span>
    <span class="phpdocumentor-signature__name">$dbc</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_layout">
        $layout
        <a href="classes/app-core-Application.html#property_layout" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">19</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type">string</span>
    <span class="phpdocumentor-signature__name">$layout</span>
     = <span class="phpdocumentor-signature__default-value">&quot;main&quot;</span></code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_request">
        $request
        <a href="classes/app-core-Application.html#property_request" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">11</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type"><a href="classes/app-core-Request.html"><abbr title="\app\core\Request">Request</abbr></a></span>
    <span class="phpdocumentor-signature__name">$request</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_response">
        $response
        <a href="classes/app-core-Application.html#property_response" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">13</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type"><a href="classes/app-core-Response.html"><abbr title="\app\core\Response">Response</abbr></a></span>
    <span class="phpdocumentor-signature__name">$response</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
            -static                                            "
>
    <h4 class="phpdocumentor-element__name" id="property_ROOT_DIR">
        $ROOT_DIR
        <a href="classes/app-core-Application.html#property_ROOT_DIR" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">22</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
    <span class="phpdocumentor-signature__static">static</span>    <span class="phpdocumentor-signature__type">string</span>
    <span class="phpdocumentor-signature__name">$ROOT_DIR</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_router">
        $router
        <a href="classes/app-core-Application.html#property_router" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">10</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type"><a href="classes/app-core-Router.html"><abbr title="\app\core\Router">Router</abbr></a></span>
    <span class="phpdocumentor-signature__name">$router</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_session">
        $session
        <a href="classes/app-core-Application.html#property_session" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">14</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type"><a href="classes/app-core-Session.html"><abbr title="\app\core\Session">Session</abbr></a></span>
    <span class="phpdocumentor-signature__name">$session</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_user">
        $user
        <a href="classes/app-core-Application.html#property_user" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">16</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type"><a href="classes/app-core-UserModel.html"><abbr title="\app\core\UserModel">UserModel</abbr></a>|null</span>
    <span class="phpdocumentor-signature__name">$user</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_userClass">
        $userClass
        <a href="classes/app-core-Application.html#property_userClass" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">18</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type">string</span>
    <span class="phpdocumentor-signature__name">$userClass</span>
     = <span class="phpdocumentor-signature__default-value">&#039;&#039;</span></code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
                    <article
        class="
            phpdocumentor-element
            -property
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="property_view">
        $view
        <a href="classes/app-core-Application.html#property_view" class="headerlink"><i class="fas fa-link"></i></a>
        <span class="phpdocumentor-element__modifiers">
                                </span>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">17</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
        <span class="phpdocumentor-signature__type"><a href="classes/app-core-View.html"><abbr title="\app\core\View">View</abbr></a></span>
    <span class="phpdocumentor-signature__name">$view</span>
    </code>

        <section class="phpdocumentor-description"></section>

        <section class="phpdocumentor-description"></section>

    

</article>
            </section>

            <section class="phpdocumentor-methods">
        <h3 class="phpdocumentor-elements__header" id="methods">
            Methods
            <a href="classes/app-core-Application.html#methods" class="headerlink"><i class="fas fa-link"></i></a>
        </h3>
                    <article
        class="phpdocumentor-element
            -method
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="method___construct">
        __construct()
        <a href="classes/app-core-Application.html#method___construct" class="headerlink"><i class="fas fa-link"></i></a>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">29</span>

    </aside>

        <p class="phpdocumentor-summary">Constructor Function</p>

    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
                    <span class="phpdocumentor-signature__name">__construct</span><span>(</span><span class="phpdocumentor-signature__argument"><span class="phpdocumentor-signature__argument__return-type">string&nbsp;</span><span class="phpdocumentor-signature__argument__name">$rootPath</span></span><span class="phpdocumentor-signature__argument"><span>, </span><span class="phpdocumentor-signature__argument__return-type">mixed&nbsp;</span><span class="phpdocumentor-signature__argument__name">$userClass</span></span><span class="phpdocumentor-signature__argument"><span>[</span><span>, </span><span class="phpdocumentor-signature__argument__return-type">string&nbsp;</span><span class="phpdocumentor-signature__argument__name">$database_connector</span><span> = </span><span class="phpdocumentor-signature__argument__default-value">&quot;mysqli&quot;</span><span> ]</span></span><span>)</span><span> : </span><span class="phpdocumentor-signature__response_type">mixed</span></code>

    
        <h5 class="phpdocumentor-argument-list__heading">Parameters</h5>
    <dl class="phpdocumentor-argument-list">
                    <dt class="phpdocumentor-argument-list__entry">
                <span class="phpdocumentor-signature__argument__name">$rootPath</span>
                : <span class="phpdocumentor-signature__argument__return-type">string</span>
                            </dt>
            <dd class="phpdocumentor-argument-list__definition">
                    <section class="phpdocumentor-description"></section>

            </dd>
                    <dt class="phpdocumentor-argument-list__entry">
                <span class="phpdocumentor-signature__argument__name">$userClass</span>
                : <span class="phpdocumentor-signature__argument__return-type">mixed</span>
                            </dt>
            <dd class="phpdocumentor-argument-list__definition">
                    <section class="phpdocumentor-description"></section>

            </dd>
                    <dt class="phpdocumentor-argument-list__entry">
                <span class="phpdocumentor-signature__argument__name">$database_connector</span>
                : <span class="phpdocumentor-signature__argument__return-type">string</span>
                 = <span class="phpdocumentor-signature__argument__default-value">&quot;mysqli&quot;</span>            </dt>
            <dd class="phpdocumentor-argument-list__definition">
                    <section class="phpdocumentor-description"><p>Use mysqli or pdo to set the database connectorthat you want to use, defaults to mysqli</p>
</section>

            </dd>
            </dl>

    

        <h5 class="phpdocumentor-return-value__heading">Return values</h5>
    <span class="phpdocumentor-signature__response_type">mixed</span>
            &mdash;
        
    
</article>
                    <article
        class="phpdocumentor-element
            -method
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="method_getDatabase">
        getDatabase()
        <a href="classes/app-core-Application.html#method_getDatabase" class="headerlink"><i class="fas fa-link"></i></a>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">61</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
                    <span class="phpdocumentor-signature__name">getDatabase</span><span>(</span><span>)</span><span> : </span><span class="phpdocumentor-signature__response_type">mixed</span></code>

        <section class="phpdocumentor-description"></section>

    
    

        <h5 class="phpdocumentor-return-value__heading">Return values</h5>
    <span class="phpdocumentor-signature__response_type">mixed</span>
            &mdash;
        
    
</article>
                    <article
        class="phpdocumentor-element
            -method
            -public
                                    -static                    "
>
    <h4 class="phpdocumentor-element__name" id="method_isGuest">
        isGuest()
        <a href="classes/app-core-Application.html#method_isGuest" class="headerlink"><i class="fas fa-link"></i></a>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">79</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
            <span class="phpdocumentor-signature__static">static</span>        <span class="phpdocumentor-signature__name">isGuest</span><span>(</span><span>)</span><span> : </span><span class="phpdocumentor-signature__response_type">bool</span></code>

        <section class="phpdocumentor-description"></section>

    
    

        <h5 class="phpdocumentor-return-value__heading">Return values</h5>
    <span class="phpdocumentor-signature__response_type">bool</span>
            &mdash;
        
    
</article>
                    <article
        class="phpdocumentor-element
            -method
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="method_login">
        login()
        <a href="classes/app-core-Application.html#method_login" class="headerlink"><i class="fas fa-link"></i></a>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">65</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
                    <span class="phpdocumentor-signature__name">login</span><span>(</span><span class="phpdocumentor-signature__argument"><span class="phpdocumentor-signature__argument__return-type"><a href="classes/app-core-DbModel.html"><abbr title="\app\core\DbModel">DbModel</abbr></a>&nbsp;</span><span class="phpdocumentor-signature__argument__name">$user</span></span><span>)</span><span> : </span><span class="phpdocumentor-signature__response_type">bool</span></code>

        <section class="phpdocumentor-description"></section>

        <h5 class="phpdocumentor-argument-list__heading">Parameters</h5>
    <dl class="phpdocumentor-argument-list">
                    <dt class="phpdocumentor-argument-list__entry">
                <span class="phpdocumentor-signature__argument__name">$user</span>
                : <span class="phpdocumentor-signature__argument__return-type"><a href="classes/app-core-DbModel.html"><abbr title="\app\core\DbModel">DbModel</abbr></a></span>
                            </dt>
            <dd class="phpdocumentor-argument-list__definition">
                    <section class="phpdocumentor-description"></section>

            </dd>
            </dl>

    

        <h5 class="phpdocumentor-return-value__heading">Return values</h5>
    <span class="phpdocumentor-signature__response_type">bool</span>
            &mdash;
        
    
</article>
                    <article
        class="phpdocumentor-element
            -method
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="method_logout">
        logout()
        <a href="classes/app-core-Application.html#method_logout" class="headerlink"><i class="fas fa-link"></i></a>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">74</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
                    <span class="phpdocumentor-signature__name">logout</span><span>(</span><span>)</span><span> : </span><span class="phpdocumentor-signature__response_type">mixed</span></code>

        <section class="phpdocumentor-description"></section>

    
    

        <h5 class="phpdocumentor-return-value__heading">Return values</h5>
    <span class="phpdocumentor-signature__response_type">mixed</span>
            &mdash;
        
    
</article>
                    <article
        class="phpdocumentor-element
            -method
            -public
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="method_run">
        run()
        <a href="classes/app-core-Application.html#method_run" class="headerlink"><i class="fas fa-link"></i></a>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">52</span>

    </aside>

    
    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">public</span>
                    <span class="phpdocumentor-signature__name">run</span><span>(</span><span>)</span><span> : </span><span class="phpdocumentor-signature__response_type">mixed</span></code>

        <section class="phpdocumentor-description"></section>

    
    

        <h5 class="phpdocumentor-return-value__heading">Return values</h5>
    <span class="phpdocumentor-signature__response_type">mixed</span>
            &mdash;
        
    
</article>
                    <article
        class="phpdocumentor-element
            -method
            -private
                                                        "
>
    <h4 class="phpdocumentor-element__name" id="method_CreateDatabaseConnection">
        CreateDatabaseConnection()
        <a href="classes/app-core-Application.html#method_CreateDatabaseConnection" class="headerlink"><i class="fas fa-link"></i></a>
    </h4>
    <aside class="phpdocumentor-element-found-in">
    <abbr class="phpdocumentor-element-found-in__file" title="core/Application.php"><a href="files/core-application.html"><abbr title="core/Application.php">Application.php</abbr></a></abbr>
    :
    <span class="phpdocumentor-element-found-in__line">89</span>

    </aside>

        <p class="phpdocumentor-summary">function to do the logic to create the database connection</p>

    <code class="phpdocumentor-code phpdocumentor-signature ">
    <span class="phpdocumentor-signature__visibility">private</span>
                    <span class="phpdocumentor-signature__name">CreateDatabaseConnection</span><span>(</span><span class="phpdocumentor-signature__argument"><span class="phpdocumentor-signature__argument__return-type">string&nbsp;</span><span class="phpdocumentor-signature__argument__name">$database_connector</span></span><span>)</span><span> : </span><span class="phpdocumentor-signature__response_type">void</span></code>

    
        <h5 class="phpdocumentor-argument-list__heading">Parameters</h5>
    <dl class="phpdocumentor-argument-list">
                    <dt class="phpdocumentor-argument-list__entry">
                <span class="phpdocumentor-signature__argument__name">$database_connector</span>
                : <span class="phpdocumentor-signature__argument__return-type">string</span>
                            </dt>
            <dd class="phpdocumentor-argument-list__definition">
                    <section class="phpdocumentor-description"><p>Connection type to use, mysqli, pdo, or sqlite</p>
</section>

            </dd>
            </dl>

    
    <h5 class="phpdocumentor-tag-list__heading" id="tags">
        Tags
        <a href="#tags" class="headerlink"><i class="fas fa-link"></i></a>
    </h5>
    <dl class="phpdocumentor-tag-list">
                                    <dt class="phpdocumentor-tag-list__entry">
                    <span class="phpdocumentor-tag__name">author</span>
                </dt>
                <dd class="phpdocumentor-tag-list__definition">
                                                                                
                                                 <section class="phpdocumentor-description"><p>Jesse Fender</p>
</section>

                                    </dd>
                        </dl>

        <h5 class="phpdocumentor-return-value__heading">Return values</h5>
    <span class="phpdocumentor-signature__response_type">void</span>
            &mdash;
        
    
</article>
            </section>

        
    <script type="text/javascript">
        function loadExternalCodeSnippets(line) {
            Array.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach((pre) => {
                var src = pre.getAttribute('data-src').replace( /\\/g, '/');
                var extension = (src.match(/\.(\w+)$/) || [, ''])[1];
                var language = 'php';

                var code = document.createElement('code');
                code.className = 'language-' + language;

                pre.textContent = '';

                pre.setAttribute('data-line', line)
                code.textContent = 'Loading…';

                pre.appendChild(code);

                var xhr = new XMLHttpRequest();

                xhr.open('GET', src, true);

                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4) {

                        if (xhr.status < 400 && xhr.responseText) {
                            code.textContent = xhr.responseText;

                            Prism.highlightElement(code);
                        }
                        else if (xhr.status >= 400) {
                            code.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;
                        }
                        else {
                            code.textContent = '✖ Error: File does not exist, is empty or trying to view from localhost';
                        }
                    }
                };

                xhr.send(null);
            });
        }

        var modals = document.querySelectorAll("[data-modal]");

        modals.forEach(function (trigger) {
            trigger.addEventListener("click", function (event) {
                //event.preventDefault();
                const modal = document.getElementById(trigger.dataset.modal);
                modal.classList.add("phpdocumentor-modal__open");
                loadExternalCodeSnippets(trigger.dataset.line)
                const exits = modal.querySelectorAll("[data-exit-button]");
                exits.forEach(function (exit) {
                    exit.addEventListener("click", function (event) {
                        event.preventDefault();
                        modal.classList.remove("phpdocumentor-modal__open");
                    });
                });
            });
        });
    </script>

    </article>
                <section data-search-results class="phpdocumentor-search-results phpdocumentor-search-results--hidden">
    <section class="phpdocumentor-search-results__dialog">
        <header class="phpdocumentor-search-results__header">
            <h2 class="phpdocumentor-search-results__title">Search results</h2>
            <button class="phpdocumentor-search-results__close"><i class="fas fa-times"></i></button>
        </header>
        <section class="phpdocumentor-search-results__body">
            <ul class="phpdocumentor-search-results__entries"></ul>
        </section>
    </section>
</section>
            </div>
        </div>
        <a href="classes/app-core-Application.html#top" class="phpdocumentor-back-to-top"><i class="fas fa-chevron-circle-up"></i></a>

    </main>

    <script>
        cssVars({});
    </script>
    <script src="https://cdn.jsdelivr.net/npm/prismjs@1.23.0/prism.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/prismjs@1.23.0/plugins/autoloader/prism-autoloader.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/prismjs@1.23.0/plugins/line-numbers/prism-line-numbers.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/prismjs@1.23.0/plugins/line-highlight/prism-line-highlight.min.js"></script>
</body>
</html>
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";